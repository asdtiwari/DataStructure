/* Program to sort the array using the merge sort technique */

# include <stdio.h>

void merge (int * array, int lower, int mid, int upper)
{
	if (array[mid] > array[mid+1])
	{
		int tmp [upper - lower + 1];
		int pos = 0;
	
		int l1 = lower;
		int l2 = mid + 1;
	
		while (l1 <= mid && l2 <= upper)
		{
			if (array[l1] <= array[l2])
				tmp[pos++] = array[l1++];
		
			else
			{
				tmp[pos++] = array[l2++];
			}
		}
	
		while (l1 <= mid)
			tmp[pos++] = array[l1++];
		
		while (l2 <= upper)
			tmp[pos++] = array[l2++];
	
		for (int i = lower, pos = 0; i <= upper; i++, pos++)
		{
			array[i] = tmp[pos];
		}
	}
}

void divide (int * array, int lower, int upper)
{
	int mid = (upper + lower) / 2;
	if (lower < upper)
	{
		divide(array, lower, mid);
		divide(array, mid + 1, upper);
		merge(array, lower, mid, upper);
	}
}

void merge_sort (int * array, int size)
{
	divide(array, 0, size - 1);
}

void write (int *array, int size)
{
    printf("\n Enter %d elements in array \n", size);
    
    for(int i = 0; i < size; i++)
        scanf("%d", (array+i));
    
    printf(" Elements inserted successfullly \n");
}

void read (int *array, int size)
{
    printf("\n Elements of Array \n");
    
    for(int i = 0; i < size; i++)
        printf(" %d ", *(array + i));
        
    printf("\n All elements printed \n");
}

// Testing
void main ()
{
	# define max 100
	int array[max];
	
	int size;
	printf("\n Enter the size of array (<= 100): ");
	scanf("%d", &size);
	
	write(&array[0], size);
	read(&array[0], size);

	merge_sort(&array[0], size);
	printf("\n Sorted Array \n");
	read(&array[0], size);
}
