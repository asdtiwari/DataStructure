/* Write a Program to find trace and norm of a matrix.
Trace is defined as the sum of principle diagonal elements.
Norm is defined as the square root of the sum of the squares of all the elements
in a matrix */

# include <stdio.h>
# include <math.h>

// order represent row and column of matix, here it accept either one.
int trace (int * matrix, int order)
{
    int sum = 0;
    for (int i = 0; i < order; i++)
        for (int j = i; j <= i; j++)
            if (i == j)
                sum += *(matrix + i * order + j);
    
    return sum;
}

// order represent row and column of matix, here it accept either one.
double norm (int * matrix, int order)
{
    int sum = 0;

    for (int i = 0; i < order; i++)
        for (int j = 0; j < order; j++)
            sum += *(matrix + i * order + j);
    
    return sqrt(sum);
}

void write (int * array, int row, int col)
{
    printf("\n Enter %d elements in array: \n", (row * col));
    
    for (int i = 0; i < row; i++)
        for (int j = 0; j < col; j++)
            scanf("%d", (array + (i * col) + j));
    
    printf("\n Elements inserted successfully \n");
}

void read (int * array, int row, int col)
{
    printf("\n Elements of Array: \n");
    
    for (int i = 0; i < row; i++)
    {
        for (int j = 0; j < col; j++)
            printf(" %d ", *(array + (i * col) + j));
            
        printf("\n");
    }
}

// testing
void main ()
{
    # define max 100
    int matrix[max][max];
    
    int size;
    printf("Enter the size of sq matrix (<= 100): ");
    scanf("%d", &size);
    
    write(&matrix[0][0], size, size);
    
    read(&matrix[0][0], size, size);
    
    printf("\n Trace is %d \n", trace(&matrix[0][0], size));
    
    printf("\n Norm is %.2lf \n", norm(&matrix[0][0], size));
}
